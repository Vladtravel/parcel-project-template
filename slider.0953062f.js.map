{"version":3,"sources":["slider.js"],"names":["Sim","sldrId","id","document","getElementById","sldrRoot","querySelector","sldrList","sldrElements","querySelectorAll","sldrElemFirst","leftArrow","rightArrow","indicatorDots","options","defaults","initialize","loop","auto","interval","arrows","dots","prototype","elemPrev","num","prevElement","currentElement","elemCount","style","display","opacity","dotOn","dotOff","elemNext","indicatorDotsAll","cssText","that","length","bgTime","getTime","Date","setAutoScroll","autoScroll","setInterval","fnTime","addEventListener","clearInterval","sum","diffNum","i","innerHTML","n","Math","abs"],"mappings":"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","file":"slider.0953062f.js","sourceRoot":"..\\src","sourcesContent":["// var slideIndex = 1;\r\n// showSlides(slideIndex);\r\n\r\n// function plusSlides(n) {\r\n//   showSlides((slideIndex += n));\r\n// }\r\n\r\n// function currentSlide(n) {\r\n//   showSlides((slideIndex = n));\r\n// }\r\n\r\n// function showSlides(n) {\r\n//   var i;\r\n//   var slides = document.getElementsByClassName('sliderbox');\r\n//   var dots = document.getElementsByClassName('slider-dots_item');\r\n//   if (n > slides.length) {\r\n//     slideIndex = 1;\r\n//   }\r\n//   if (n < 1) {\r\n//     slideIndex = slides.length;\r\n//   }\r\n//   for (i = 0; i < slides.length; i++) {\r\n//     slides[i].style.display = 'none';\r\n//   }\r\n//   for (i = 0; i < dots.length; i++) {\r\n//     dots[i].className = dots[i].className.replace(' active', '');\r\n//   }\r\n//   slides[slideIndex - 1].style.display = 'block';\r\n//   dots[slideIndex - 1].className += ' active';\r\n// }\r\n\r\nfunction Sim(sldrId) {\r\n  let id = document.getElementById(sldrId);\r\n  if (id) {\r\n    this.sldrRoot = id;\r\n  } else {\r\n    this.sldrRoot = document.querySelector('.sim-slider');\r\n  }\r\n\r\n  // Carousel objects\r\n  this.sldrList = this.sldrRoot.querySelector('.sim-slider-list');\r\n  this.sldrElements = this.sldrList.querySelectorAll('.sim-slider-element');\r\n  this.sldrElemFirst = this.sldrList.querySelector('.sim-slider-element');\r\n  this.leftArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-left');\r\n  this.rightArrow = this.sldrRoot.querySelector('div.sim-slider-arrow-right');\r\n  this.indicatorDots = this.sldrRoot.querySelector('div.sim-slider-dots');\r\n\r\n  // Initialization\r\n  this.options = Sim.defaults;\r\n  Sim.initialize(this);\r\n}\r\n\r\nSim.defaults = {\r\n  // Default options for the carousel\r\n  loop: true, // Бесконечное зацикливание слайдера\r\n  auto: true, // Автоматическое пролистывание\r\n  interval: 5000, // Интервал между пролистыванием элементов (мс)\r\n  arrows: true, // Пролистывание стрелками\r\n  dots: true, // Индикаторные точки\r\n};\r\n\r\nSim.prototype.elemPrev = function (num) {\r\n  num = num || 1;\r\n\r\n  let prevElement = this.currentElement;\r\n  this.currentElement -= num;\r\n  if (this.currentElement < 0) this.currentElement = this.elemCount - 1;\r\n\r\n  if (!this.options.loop) {\r\n    if (this.currentElement == 0) {\r\n      this.leftArrow.style.display = 'none';\r\n    }\r\n    this.rightArrow.style.display = 'block';\r\n  }\r\n\r\n  this.sldrElements[this.currentElement].style.opacity = '1';\r\n  this.sldrElements[prevElement].style.opacity = '0';\r\n\r\n  if (this.options.dots) {\r\n    this.dotOn(prevElement);\r\n    this.dotOff(this.currentElement);\r\n  }\r\n};\r\n\r\nSim.prototype.elemNext = function (num) {\r\n  num = num || 1;\r\n\r\n  let prevElement = this.currentElement;\r\n  this.currentElement += num;\r\n  if (this.currentElement >= this.elemCount) this.currentElement = 0;\r\n\r\n  if (!this.options.loop) {\r\n    if (this.currentElement == this.elemCount - 1) {\r\n      this.rightArrow.style.display = 'none';\r\n    }\r\n    this.leftArrow.style.display = 'block';\r\n  }\r\n\r\n  this.sldrElements[this.currentElement].style.opacity = '1';\r\n  this.sldrElements[prevElement].style.opacity = '0';\r\n\r\n  if (this.options.dots) {\r\n    this.dotOn(prevElement);\r\n    this.dotOff(this.currentElement);\r\n  }\r\n};\r\n\r\nSim.prototype.dotOn = function (num) {\r\n  this.indicatorDotsAll[num].style.cssText =\r\n    'background-color:#BBB; cursor:pointer;';\r\n};\r\n\r\nSim.prototype.dotOff = function (num) {\r\n  this.indicatorDotsAll[num].style.cssText =\r\n    'background-color:#556; cursor:default;';\r\n};\r\n\r\nSim.initialize = function (that) {\r\n  // Constants\r\n  that.elemCount = that.sldrElements.length; // Количество элементов\r\n\r\n  // Variables\r\n  that.currentElement = 0;\r\n  let bgTime = getTime();\r\n\r\n  // Functions\r\n  function getTime() {\r\n    return new Date().getTime();\r\n  }\r\n  function setAutoScroll() {\r\n    that.autoScroll = setInterval(function () {\r\n      let fnTime = getTime();\r\n      if (fnTime - bgTime + 10 > that.options.interval) {\r\n        bgTime = fnTime;\r\n        that.elemNext();\r\n      }\r\n    }, that.options.interval);\r\n  }\r\n\r\n  // Start initialization\r\n  if (that.elemCount <= 1) {\r\n    // Отключить навигацию\r\n    that.options.auto = false;\r\n    that.options.arrows = false;\r\n    that.options.dots = false;\r\n    that.leftArrow.style.display = 'none';\r\n    that.rightArrow.style.display = 'none';\r\n  }\r\n  if (that.elemCount >= 1) {\r\n    // показать первый элемент\r\n    that.sldrElemFirst.style.opacity = '1';\r\n  }\r\n\r\n  if (!that.options.loop) {\r\n    that.leftArrow.style.display = 'none'; // отключить левую стрелку\r\n    that.options.auto = false; // отключить автопркрутку\r\n  } else if (that.options.auto) {\r\n    // инициализация автопрокруки\r\n    setAutoScroll();\r\n    // Остановка прокрутки при наведении мыши на элемент\r\n    that.sldrList.addEventListener(\r\n      'mouseenter',\r\n      function () {\r\n        clearInterval(that.autoScroll);\r\n      },\r\n      false,\r\n    );\r\n    that.sldrList.addEventListener('mouseleave', setAutoScroll, false);\r\n  }\r\n\r\n  if (that.options.arrows) {\r\n    // инициализация стрелок\r\n    that.leftArrow.addEventListener(\r\n      'click',\r\n      function () {\r\n        let fnTime = getTime();\r\n        if (fnTime - bgTime > 1000) {\r\n          bgTime = fnTime;\r\n          that.elemPrev();\r\n        }\r\n      },\r\n      false,\r\n    );\r\n    that.rightArrow.addEventListener(\r\n      'click',\r\n      function () {\r\n        let fnTime = getTime();\r\n        if (fnTime - bgTime > 1000) {\r\n          bgTime = fnTime;\r\n          that.elemNext();\r\n        }\r\n      },\r\n      false,\r\n    );\r\n  } else {\r\n    that.leftArrow.style.display = 'none';\r\n    that.rightArrow.style.display = 'none';\r\n  }\r\n\r\n  if (that.options.dots) {\r\n    // инициализация индикаторных точек\r\n    let sum = '',\r\n      diffNum;\r\n    for (let i = 0; i < that.elemCount; i++) {\r\n      sum += '<span class=\"sim-dot\"></span>';\r\n    }\r\n    that.indicatorDots.innerHTML = sum;\r\n    that.indicatorDotsAll = that.sldrRoot.querySelectorAll('span.sim-dot');\r\n    // Назначаем точкам обработчик события 'click'\r\n    for (let n = 0; n < that.elemCount; n++) {\r\n      that.indicatorDotsAll[n].addEventListener(\r\n        'click',\r\n        function () {\r\n          diffNum = Math.abs(n - that.currentElement);\r\n          if (n < that.currentElement) {\r\n            bgTime = getTime();\r\n            that.elemPrev(diffNum);\r\n          } else if (n > that.currentElement) {\r\n            bgTime = getTime();\r\n            that.elemNext(diffNum);\r\n          }\r\n          // Если n == that.currentElement ничего не делаем\r\n        },\r\n        false,\r\n      );\r\n    }\r\n    that.dotOff(0); // точка[0] выключена, остальные включены\r\n    for (let i = 1; i < that.elemCount; i++) {\r\n      that.dotOn(i);\r\n    }\r\n  }\r\n};\r\n\r\nnew Sim();\r\n"]}